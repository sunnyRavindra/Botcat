"use strict";(self.webpackChunkdaku=self.webpackChunkdaku||[]).push([[2673],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>g});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),u=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=u(t.components);return a.createElement(s.Provider,{value:e},t.children)},m="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,s=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),m=u(n),c=r,g=m["".concat(s,".").concat(c)]||m[c]||d[c]||l;return n?a.createElement(g,o(o({ref:e},p),{},{components:n})):a.createElement(g,o({ref:e},p))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i[m]="string"==typeof t?t:r,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6380:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const l={title:"Terminology"},o=void 0,i={unversionedId:"SDET/Xray/Terminology",id:"SDET/Xray/Terminology",title:"Terminology",description:"Terminology",source:"@site/docs/SDET/Xray/Terminology.md",sourceDirName:"SDET/Xray",slug:"/SDET/Xray/Terminology",permalink:"/SDET/Xray/Terminology",draft:!1,tags:[],version:"current",frontMatter:{title:"Terminology"},sidebar:"SDETSidebar",previous:{title:"Test Plan",permalink:"/SDET/Xray/TestPlan"},next:{title:"Test Execution",permalink:"/SDET/Xray/TestExecution"}},s={},u=[{value:"Terminology",id:"terminology",level:3}],p={toc:u},m="wrapper";function d(t){let{components:e,...n}=t;return(0,r.kt)(m,(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"terminology"},"Terminology"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Xray"),(0,r.kt)("th",{parentName:"tr",align:null},"ISTQB"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Test")),(0,r.kt)("td",{parentName:"tr",align:null},"Test"),(0,r.kt)("td",{parentName:"tr",align:null},"A test case. It may either be manual or automated, composed of multiple steps, actions and expected results."),(0,r.kt)("td",{parentName:"tr",align:null},"test case, test scenario, test template")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Precondition")),(0,r.kt)("td",{parentName:"tr",align:null},"Pre-Condition"),(0,r.kt)("td",{parentName:"tr",align:null},"Initial conditions that must be assured before the execution of the Test's own steps. A Pre-Condition may be used by multiple Tests."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Test Set")),(0,r.kt)("td",{parentName:"tr",align:null},"Test Set"),(0,r.kt)("td",{parentName:"tr",align:null},"A group of tests, organized in some logical way. A test may belong to multiple Test Sets."),(0,r.kt)("td",{parentName:"tr",align:null},"test group, test suite")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Test Plan")),(0,r.kt)("td",{parentName:"tr",align:null},"Test Plan"),(0,r.kt)("td",{parentName:"tr",align:null},'A "formal" plan of the tests intended to be executed for a given version.'),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Test Execution")),(0,r.kt)("td",{parentName:"tr",align:null},"Test Execution"),(0,r.kt)("td",{parentName:"tr",align:null},'An assignable, "schedulable" task to execute one or more tests for a given version/revision along with its results.'),(0,r.kt)("td",{parentName:"tr",align:null},"test cycle")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Sub-Test Execution")),(0,r.kt)("td",{parentName:"tr",align:null},"Sub-Test Execution"),(0,r.kt)("td",{parentName:"tr",align:null},"A Sub-Test Execution has the same functionalities as the\xa0",(0,r.kt)("a",{parentName:"td",href:"http://confluence.xpand-addons.com/display/XRAY/Test+Execution"},"Test Execution"),"\xa0issue type. The difference between them is that the Sub-Test Execution is a\xa0sub-task\xa0and can be created in a\xa0requirement's context. Creating a Test Execution as a sub-task from within the requirement issue screen will provide the user the ability to track executions on the Agile board."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Test Run")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"A specific run of a test. An instance of the test containing the execution status and a snapshot of the test specification. Whenever a user adds a Test to a Test Execution, a test run is created internally within the Test Execution context. A test may have multiple test runs."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Coverable Issue")),(0,r.kt)("td",{parentName:"tr",align:null},"Story, requirement, Bug, ...."),(0,r.kt)("td",{parentName:"tr",align:null},"All issues whose Issue Type is configured as being a Coverable Issue Type in ",(0,r.kt)("a",{parentName:"td",href:"https://docs.getxray.app/display/XRAYCLOUD/Project+Settings%3A+Test+Coverage"},"Project Settings: Test Coverage"),"."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Test Status")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"The calculated test coverage status of a Test, for some scope (e.g., version/test plan). In the context of a Test Execution, the recorded status of a Test Run."),(0,r.kt)("td",{parentName:"tr",align:null},"..")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Requirement")),(0,r.kt)("td",{parentName:"tr",align:null},"Story, Requirement, ...."),(0,r.kt)("td",{parentName:"tr",align:null},"Something that you expect from the system; a feature. A good requirement explains how the system should behave and its purpose."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Test Repository")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"The full list of tests within a project. In Xray, the test repository is simply composed of all Test issues."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Test Strategy")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"The requirements you want to validate, how to validate them,\xa0use of either manual or automated tests,\xa0the resource allocation, etc."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Testing Lifecycle")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"After requirement specification and revision, the testing lifecyce involves test\xa0",(0,r.kt)("strong",{parentName:"td"},"planning"),", test\xa0",(0,r.kt)("strong",{parentName:"td"},"designing"),", test\xa0",(0,r.kt)("strong",{parentName:"td"},"execution"),"\xa0and test\xa0",(0,r.kt)("strong",{parentName:"td"},"reporting.")),(0,r.kt)("td",{parentName:"tr",align:null})))))}d.isMDXComponent=!0}}]);