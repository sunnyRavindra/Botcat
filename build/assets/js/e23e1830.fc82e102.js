"use strict";(self.webpackChunkdaku=self.webpackChunkdaku||[]).push([[120],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),l=s(r),d=o,f=l["".concat(p,".").concat(d)]||l[d]||m[d]||a;return r?n.createElement(f,c(c({ref:t},u),{},{components:r})):n.createElement(f,c({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[l]="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9455:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={title:"Cucumber Reports"},c=void 0,i={unversionedId:"SDET/Cucumber/ExtentReports",id:"SDET/Cucumber/ExtentReports",title:"Cucumber Reports",description:"ExtentReports Cucumber7 Adapter",source:"@site/docs/SDET/Cucumber/ExtentReports.md",sourceDirName:"SDET/Cucumber",slug:"/SDET/Cucumber/ExtentReports",permalink:"/SDET/Cucumber/ExtentReports",draft:!1,tags:[],version:"current",frontMatter:{title:"Cucumber Reports"},sidebar:"SDETSidebar",previous:{title:"Framework Architecture",permalink:"/SDET/Cucumber/Architecture"},next:{title:"Dependency Injection",permalink:"/SDET/Cucumber/Dependency-Injection"}},p={},s=[{value:"ExtentReports Cucumber7 Adapter",id:"extentreports-cucumber7-adapter",level:3},{value:"extent.properties",id:"extentproperties",level:3},{value:"Spark-config.xml",id:"spark-configxml",level:3},{value:"Take ScreenShots on failure",id:"take-screenshots-on-failure",level:3}],u={toc:s},l="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(l,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"extentreports-cucumber7-adapter"},"ExtentReports Cucumber7 Adapter"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"https://ghchirp.site/3196/\n")),(0,o.kt)("h3",{id:"extentproperties"},"extent.properties"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"extent.reporter.spark.start=true\nextent.reporter.spark.out=target/extentReport/report.html\n")),(0,o.kt)("h3",{id:"spark-configxml"},"Spark-config.xml"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8"?>\n<extentreports>\n    <configuration>\n        \x3c!-- report theme --\x3e\n        \x3c!-- standard, dark --\x3e\n        <theme>dark</theme>\n\n        \x3c!-- document encoding --\x3e\n        \x3c!-- defaults to UTF-8 --\x3e\n        <encoding>UTF-8</encoding>\n\n        \x3c!-- protocol for script and stylesheets --\x3e\n        \x3c!-- defaults to https --\x3e\n        <protocol>https</protocol>\n\n        \x3c!-- title of the document --\x3e\n        <documentTitle>Basic Test</documentTitle>\n\n        \x3c!-- report name - displayed at top-nav --\x3e\n        <reportName>Report Name</reportName>\n\n        \x3c!-- view report without internet --\x3e\n        <offlineMode>false</offlineMode>\n\n        <thumbnailForBase64>true</thumbnailForBase64>\n\n        \x3c!-- custom javascript --\x3e\n        <js></js>\n\n        \x3c!-- custom styles --\x3e\n        <css></css>\n    </configuration>\n</extentreports>\n')),(0,o.kt)("h3",{id:"take-screenshots-on-failure"},"Take ScreenShots on failure"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'    @AfterStep\n    public void takeScreenShots(Scenario scenario) throws IOException {\n        if(scenario.isFailed()) {\n            //Take Screenshot\n            byte[] screenshotFile = ((TakesScreenshot)contextManager.driverManager.getDriver()).getScreenshotAs(OutputType.BYTES);\n            //Attach to Extent report\n            scenario.attach(screenshotFile, "image/png", "image");\n        }\n    }\n')))}m.isMDXComponent=!0}}]);