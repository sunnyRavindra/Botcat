"use strict";(self.webpackChunkdaku=self.webpackChunkdaku||[]).push([[7101],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(a),c=r,k=m["".concat(o,".").concat(c)]||m[c]||d[c]||s;return a?n.createElement(k,i(i({ref:t},u),{},{components:a})):n.createElement(k,i({ref:t},u))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,i=new Array(s);i[0]=c;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<s;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},5757:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const s={title:"RestAssured"},i=void 0,l={unversionedId:"TestAutomation/RestAssured",id:"TestAutomation/RestAssured",title:"RestAssured",description:"ToolsQA",source:"@site/docs/TestAutomation/RestAssured.md",sourceDirName:"TestAutomation",slug:"/TestAutomation/RestAssured",permalink:"/TestAutomation/RestAssured",draft:!1,tags:[],version:"current",frontMatter:{title:"RestAssured"},sidebar:"myAutogeneratedSidebar",previous:{title:"Selenium",permalink:"/TestAutomation/Selenium"},next:{title:"TestNg",permalink:"/TestAutomation/TestNg"}},o={},p=[{value:"API Flow",id:"api-flow",level:3},{value:"Http Basics",id:"http-basics",level:3},{value:"HTTP methods",id:"http-methods",level:2},{value:"Example",id:"example",level:3},{value:"HTTP Request",id:"http-request",level:3},{value:"<em>Request Line</em>",id:"request-line",level:3},{value:"<em>Zero or more headers</em>",id:"zero-or-more-headers",level:3},{value:"<em>An optional request body</em>",id:"an-optional-request-body",level:3},{value:"HTTPS Response",id:"https-response",level:3},{value:"RestAssured without Static imports",id:"restassured-without-static-imports",level:3},{value:"RestAssured withStatic imports BDD style",id:"restassured-withstatic-imports-bdd-style",level:3},{value:"Example",id:"example-1",level:3},{value:"Characteristics of REST",id:"characteristics-of-rest",level:3},{value:"Rest API Connectors",id:"rest-api-connectors",level:3},{value:"Components in Rest",id:"components-in-rest",level:3},{value:"Rest Data Elements",id:"rest-data-elements",level:3},{value:"Create Json Object with Json Simple",id:"create-json-object-with-json-simple",level:3},{value:"Serialization",id:"serialization",level:3},{value:"Deserialization",id:"deserialization",level:3},{value:"Authentication",id:"authentication",level:3},{value:"Basic Authentication(Auth)",id:"basic-authenticationauth",level:3},{value:"Digest Authentication",id:"digest-authentication",level:3},{value:"Form Authentication",id:"form-authentication",level:3},{value:"OAuth Authentication",id:"oauth-authentication",level:3},{value:"Authorisation",id:"authorisation",level:3},{value:"Put Request",id:"put-request",level:3},{value:"To Be continued",id:"to-be-continued",level:3},{value:"Jira Practice Api&#39;s",id:"jira-practice-apis",level:3},{value:"OAath 2.0",id:"oaath-20",level:3},{value:"Serialisation and Deserialisation using POJO",id:"serialisation-and-deserialisation-using-pojo",level:3},{value:"Request Response Spec Builder",id:"request-response-spec-builder",level:3},{value:"JWT token RestAssured",id:"jwt-token-restassured",level:3},{value:"Form data",id:"form-data",level:3},{value:"Rest Assured Framework",id:"rest-assured-framework",level:3},{value:"Dependency",id:"dependency",level:3},{value:"Static Imports",id:"static-imports",level:3}],u={toc:p},m="wrapper";function d(e){let{components:t,...s}=e;return(0,r.kt)(m,(0,n.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.toolsqa.com/rest-assured-tutorial/"},"ToolsQA")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://qaautomation.expert/2023/10/12/rest-assured-tutorials/"},"QA Automation Expert")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/rest-assured/rest-assured/wiki/Usage"},"Rest Assured Official site")),(0,r.kt)("h3",{id:"api-flow"},"API Flow"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"APIBasics.png",src:a(2884).Z,width:"1172",height:"995"})),(0,r.kt)("h3",{id:"http-basics"},"Http Basics"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Https.png",src:a(6837).Z,width:"1062",height:"988"})),(0,r.kt)("h2",{id:"http-methods"},"HTTP methods"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"GET")," \tAsks to get the resource at the requested URL.\n",(0,r.kt)("strong",{parentName:"p"},"POST")," \tAsks the server to accept the body info attached. It is like GET request with extra info sent with the request.\n",(0,r.kt)("strong",{parentName:"p"},"HEAD")," \tAsks for only the header part of whatever a GET would return. Just like GET but with no body.\n",(0,r.kt)("strong",{parentName:"p"},"TRACE")," Asks for the loopback of the request message, for testing or troubleshooting.\n",(0,r.kt)("strong",{parentName:"p"},"PUT"),"   Says to put the enclosed info (the body) at the requested URL.\n",(0,r.kt)("strong",{parentName:"p"},"DELETE")," \tSays to delete the resource at the requested URL.\n",(0,r.kt)("strong",{parentName:"p"},"OPTIONS")," \tAsks for a list of the HTTP methods to which the thing at the request URL can respond\n",(0,r.kt)("strong",{parentName:"p"},"PATCH"),": For partial updates."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"1xx (100 \u2013 199): The response is informational"),(0,r.kt)("li",{parentName:"ol"},"2xx (200 \u2013 299): Assures successful response"),(0,r.kt)("li",{parentName:"ol"},"3xx (300 \u2013 399): You are required to take further action to fulfill the request"),(0,r.kt)("li",{parentName:"ol"},"4xx (400 \u2013 499): There\u2019s a bad syntax and the request cannot be completed"),(0,r.kt)("li",{parentName:"ol"},"5xx (500 \u2013 599): The server entirely fails to complete the request")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"https://domain.com/?key1=value1&key2=value2\n")),(0,r.kt)("h3",{id:"http-request"},"HTTP Request"),(0,r.kt)("h3",{id:"request-line"},(0,r.kt)("em",{parentName:"h3"},"Request Line")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"The HTTP method used")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"The request URI")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"The HTTP protocol version"))),(0,r.kt)("h3",{id:"zero-or-more-headers"},(0,r.kt)("em",{parentName:"h3"},"Zero or more headers")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"User-Agent: lets the server identify the application, operating system, vendor, and version.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Connection: controls the network connection. In other words, kill or continues the connection after the transaction.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Cache-Control: specifies browser caching policies.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Accept-Language: indicates what all languages(natural) the client can understand.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Accept-Charset")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Accept-Encoding")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Authorization")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Content-Length")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Content-Type")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Cookie")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Expect")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"From")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Host")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"If-Match")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"If-Modified-Since")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"In-None-Match")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"If-Range")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"If-Unmodified-Since")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Max-Forwards")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Proxy-Authorization")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Range")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Referer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"TE"))),(0,r.kt)("h3",{id:"an-optional-request-body"},(0,r.kt)("em",{parentName:"h3"},"An optional request body")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"_Request body may either be in the form of XML or JSON")),(0,r.kt)("h3",{id:"https-response"},"HTTPS Response"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"A status."),(0,r.kt)("li",{parentName:"ol"},"Collection of Headers."),(0,r.kt)("li",{parentName:"ol"},"A Body.")),(0,r.kt)("h3",{id:"restassured-without-static-imports"},"RestAssured without Static imports"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},'import org.testng.Assert;\nimport org.testng.annotations.Test;\nimport io.restassured.RestAssured;\nimport io.restassured.response.Response;\nimport io.restassured.response.ValidatableResponse;\nimport io.restassured.specification.RequestSpecification;\n\npublic class WithoutBDDStyle {\n\nstatic RequestSpecification requestSpecification;\nstatic Response response;\nstatic ValidatableResponse validatableResponse;\n\n@Test\npublic void oldMethodOfRestAssured() {\nRestAssured.baseURI = "http://dummy.restapiexample.com/api/v1/employees";\n// Create a request specification\nrequestSpecification = RestAssured.given();\n// Calling GET method\nresponse = requestSpecification.get();\n// Let\'s print response body.\nSystem.out.println(response.prettyPrint());\n// Validate Response\nvalidatableResponse = response.then();\n// Get status code\nvalidatableResponse.statusCode(200);\n// Check status line is as expected\nvalidatableResponse.statusLine("HTTP/1.1 200 OK");\n}\n\n@Test\npublic void oldMethodOfRestAssuredUsingTestNG() {\nRestAssured.baseURI = "http://dummy.restapiexample.com/api/v1/employees";\n// Create a request specification\nrequestSpecification = RestAssured.given();\n// Calling GET method\nresponse = requestSpecification.get();\n// Let\'s print response body.\nSystem.out.println(response.prettyPrint());\n// Get status line\nAssert.assertEquals(response.getStatusLine(), "HTTP/1.1 200 OK");\n// Get status code\nAssert.assertEquals(response.getStatusCode(), 200);\n}\n}\n')),(0,r.kt)("h3",{id:"restassured-withstatic-imports-bdd-style"},"RestAssured withStatic imports BDD style"),(0,r.kt)("h3",{id:"example-1"},"Example"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},(0,r.kt)("strong",{parentName:"em"},"Resource URL:")," ",(0,r.kt)("a",{parentName:"em",href:"https://bookstore.toolsqa.com/"},"https://bookstore.toolsqa.com/"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},(0,r.kt)("strong",{parentName:"em"},"Parameter:")," BookStore/v1/Books"))),(0,r.kt)("h3",{id:"characteristics-of-rest"},"Characteristics of REST"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Uniform interface"),(0,r.kt)("li",{parentName:"ul"},"Client Server separation"),(0,r.kt)("li",{parentName:"ul"},"Stateless"),(0,r.kt)("li",{parentName:"ul"},"Layered System"),(0,r.kt)("li",{parentName:"ul"},"Cacheable"),(0,r.kt)("li",{parentName:"ul"},"Code-on-demand(Eg - Flash Video Player)")),(0,r.kt)("h3",{id:"rest-api-connectors"},"Rest API Connectors"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"_",(0,r.kt)("strong",{parentName:"li"},"Client")," "),(0,r.kt)("li",{parentName:"ol"},"_",(0,r.kt)("strong",{parentName:"li"},"Server")," "),(0,r.kt)("li",{parentName:"ol"},"_",(0,r.kt)("strong",{parentName:"li"},"Cache")," "),(0,r.kt)("li",{parentName:"ol"},"_",(0,r.kt)("strong",{parentName:"li"},"Resolver")," "),(0,r.kt)("li",{parentName:"ol"},"_",(0,r.kt)("strong",{parentName:"li"},"Tunnel")," ")),(0,r.kt)("h3",{id:"components-in-rest"},"Components in Rest"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"_",(0,r.kt)("strong",{parentName:"li"},"Origin Server")," "),(0,r.kt)("li",{parentName:"ol"},"_",(0,r.kt)("strong",{parentName:"li"},"User Agent")," "),(0,r.kt)("li",{parentName:"ol"},"_",(0,r.kt)("strong",{parentName:"li"},"Gateway")," "),(0,r.kt)("li",{parentName:"ol"},"_",(0,r.kt)("strong",{parentName:"li"},"Proxy")," ")),(0,r.kt)("h3",{id:"rest-data-elements"},"Rest Data Elements"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("em",{parentName:"li"},(0,r.kt)("strong",{parentName:"em"},"Resource"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Resource Identifier"),"(URI)"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Resource Metadata")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Representation")," (Entire Request or Response)"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Representation Metadata"),"(Headers- ",(0,r.kt)("em",{parentName:"li"},(0,r.kt)("strong",{parentName:"em"},"content-type")),", ",(0,r.kt)("em",{parentName:"li"},(0,r.kt)("strong",{parentName:"em"},"content-length")),", ",(0,r.kt)("em",{parentName:"li"},(0,r.kt)("strong",{parentName:"em"},"User-Agent, Connection, Accept-Encodin")),")")),(0,r.kt)("p",null,"Query Parameter\nAnd Path Parameter\nJsonPath\nXmlPath"),(0,r.kt)("h3",{id:"create-json-object-with-json-simple"},"Create Json Object with Json Simple"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"\x3c!-- https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple --\x3e\n<dependency>\n    <groupId>com.googlecode.json-simple</groupId>\n    <artifactId>json-simple</artifactId>\n    <version>1.1.1</version>\n</dependency>\n\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'JSONObject requestParams = new JSONObject(); \nrequestParams.put("userId", "TQ123"); \nrequestParams.put("isbn", "9781449325862"); \nJSONObject.toJSONString()\nrequest.header("Content-Type", "application/json"); \nrequest.body(requestParams.toJSONString());\n')),(0,r.kt)("h3",{id:"serialization"},"Serialization"),(0,r.kt)("p",null,"Serialization is a process where you convert an Instance of a Class (",(0,r.kt)("em",{parentName:"p"},"Object of a class"),") into a Byte Stream. This Byte Stream can then be stored as a file on the disk or can also be sent to another computer via the network. Deserialisation in Opposite of Serialization."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://www.toolsqa.com/gallery/Rest%20Assured/1.Serialization%20and%20Deserialization%20in%20Java.png",alt:"Serialization"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},'ObjectOutputStream o = new ObjectOutputStream(new FileOutputStream("//File Name"));\n\nAnimal animal = new Animal("Cow");\n\no.writeObject(animal);\no.close();\n')),(0,r.kt)("h3",{id:"deserialization"},"Deserialization"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"FileInputStream fileStream = new FileInputStream(new File(fileName));\nObjectInputStream objectStream = new ObjectInputStream(fileStream);\nObject deserializeObject = objectStream.readObject();\nobjectStream.close();\nfileStream.close();\n")),(0,r.kt)("h3",{id:"authentication"},"Authentication"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Being able to authenticate with Credentials")),(0,r.kt)("h3",{id:"basic-authenticationauth"},"Basic Authentication(Auth)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Does using Authentication headers. ie username and Password is sent in the URL.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},'given().auth().basic("your username", "your password").get("your end point URL");\n')),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc2617#section-1.2"},"Challenge Response Mechanism"),"\nThis means that it waits for the server to challenge rather than send the credentials directly."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'given().auth().preemptive().basic("your username", "your password").get("your end point URL");\n')),(0,r.kt)("h3",{id:"digest-authentication"},"Digest Authentication"),(0,r.kt)("p",null,"It uses a digestive key in subsequent requests. If at all it is intercepted by an eavesdropper, he will get access only to the transaction performed and not the user password."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'given().auth().digest("your username", "your password").get("your end point URL")\n')),(0,r.kt)("h3",{id:"form-authentication"},"Form Authentication"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'given() .auth().form("your username", "your password").post("your end point URL")\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'given().auth().form("your username", "your password", new FormAuthConfig("/perform_signIn","user","password"))\n')),(0,r.kt)("h3",{id:"oauth-authentication"},"OAuth Authentication"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'//Oauth 1\ngiven().auth().oauth(consumerKey, consumerSecret, accessToken, tokenSecret).get("your end point URL")\n// Oauth 2 \ngiven().auth().oauth2("Access token").get("your end point URL")\n')),(0,r.kt)("h3",{id:"authorisation"},"Authorisation"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Being able to provide valid access. ie (Admin and Employee users )")),(0,r.kt)("h3",{id:"put-request"},"Put Request"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"OST request")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"201 with a location header pointing to the new resource."),(0,r.kt)("li",{parentName:"ul"},"400 if the new item is not created.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"PUT request")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"204 for OK/SUCCESS (but no content)."),(0,r.kt)("li",{parentName:"ul"},"200 for OK with Content Body (Updated response)."),(0,r.kt)("li",{parentName:"ul"},"400 if the data sent was invalid.\n",(0,r.kt)("a",{parentName:"li",href:"https://toolsqa.com/rest-assured/put-request-using-rest-assured/"},"https://toolsqa.com/rest-assured/put-request-using-rest-assured/"))),(0,r.kt)("h3",{id:"to-be-continued"},"To Be continued"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://toolsqa.com/rest-assured/delete-request-using-rest-assured/"},"https://toolsqa.com/rest-assured/delete-request-using-rest-assured/"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://qaautomation.expert/2023/10/12/rest-assured-tutorials/"},"https://qaautomation.expert/2023/10/12/rest-assured-tutorials/")),(0,r.kt)("h3",{id:"jira-practice-apis"},"Jira Practice Api's"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://developer.atlassian.com/server/jira/platform/rest-apis/"},"Jira Api's for practice")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/atlassian/jira-software"},"Jira Docker Image")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://developer.atlassian.com/server/jira/platform/cookie-based-authentication/"},"Cookie-based authentication Api")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.atlassian.com/jira-software/REST/9.11.0/"},"API Reference")),(0,r.kt)("p",null,"Session Filter explanation "),(0,r.kt)("p",null,"Attachment and Multipart upload "),(0,r.kt)("p",null,"Extract Response as using extract().asString()"),(0,r.kt)("p",null,"HTTPs relaxed https certifications"),(0,r.kt)("h3",{id:"oaath-20"},"OAath 2.0"),(0,r.kt)("p",null,"Access token clinet ID , google sign in\nGrant type(autherisation code and client credentials)"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Hitting the Access Code URL and getting the access code "),(0,r.kt)("li",{parentName:"ol"},"Hitting the Access Token URL and getting the Access Token "),(0,r.kt)("li",{parentName:"ol"},"Hitting the actual request with the access token")),(0,r.kt)("p",null,"![","[Pasted image 20231123100710.png]","]"),(0,r.kt)("p",null,"TOken in Response\n![","[Pasted image 20231123101213.png]","]"),(0,r.kt)("p",null,"![","[Pasted image 20231123101952.png]","]"),(0,r.kt)("p",null,"![","[Pasted image 20231123102141.png]","]\n![","[Pasted image 20231123124455.png]","]\n![","[Pasted image 20231123102325.png]","]\n![","[Pasted image 20231123102358.png]","]"),(0,r.kt)("p",null,"![","[Pasted image 20231123103612.png]","]\nAccess Code"),(0,r.kt)("p",null,"![","[Pasted image 20231123123202.png]","]"),(0,r.kt)("p",null,"Access Token "),(0,r.kt)("p",null,"![","[Pasted image 20231123123433.png]","]"),(0,r.kt)("p",null,"Actual Request\n![","[Pasted image 20231123123315.png]","]"),(0,r.kt)("p",null,"Client Credential "),(0,r.kt)("p",null,"![","[Pasted image 20231123124427.png]","]"),(0,r.kt)("p",null,"![","[Pasted image 20231123124636.png]","]"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Link"},"https://qaautomation.expert/2023/10/12/rest-assured-tutorials/\n")),(0,r.kt)("h3",{id:"serialisation-and-deserialisation-using-pojo"},"Serialisation and Deserialisation using POJO"),(0,r.kt)("p",null,"![","[Pasted image 20231123152504.png]","]\n![","[Pasted image 20231123162831.png]","]"),(0,r.kt)("h3",{id:"request-response-spec-builder"},"Request Response Spec Builder"),(0,r.kt)("p",null,"![","[Pasted image 20231123180330.png]","]"),(0,r.kt)("p",null,"![","[Pasted image 20231123180618.png]","]"),(0,r.kt)("h3",{id:"jwt-token-restassured"},"JWT token RestAssured"),(0,r.kt)("h3",{id:"form-data"},"Form data"),(0,r.kt)("p",null,"![","[Pasted image 20231123222103.png]","]\n![","[Pasted image 20231123222155.png]","]"),(0,r.kt)("p",null,"Using Rest Assured\n![","[Pasted image 20231123223410.png]","]"),(0,r.kt)("p",null,"![","[Pasted image 20231123223744.png]","]"),(0,r.kt)("p",null,"Loggig\n![","[Pasted image 20231124153450.png]","]"),(0,r.kt)("h3",{id:"rest-assured-framework"},"Rest Assured Framework"),(0,r.kt)("h3",{id:"dependency"},"Dependency"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Rest Assured dependency includes JsonPath and XmlPath")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Rest Assured's dependency declaration comes before (JUnit or TestNG) dependency to make sure that the correct version of Hamcrest is used "),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"JsonPath: Used for parsing and extracting data from JSON responses."),(0,r.kt)("li",{parentName:"ul"},"XmlPath: Used for parsing and manipulating XML responses."),(0,r.kt)("li",{parentName:"ul"},"Hamcreast is used for assertions."),(0,r.kt)("li",{parentName:"ul"},"json-schema-validator is used for validating Json Schema\nJacson\nGson")))),(0,r.kt)("h3",{id:"static-imports"},"Static Imports"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},"import io.restassured.RestAssured.*;\nimport io.restassured.matcher.RestAssuredMatchers.*;\nimport org.hamcrest.Matchers.*;\nimport io.restassured.module.jsv.JsonSchemaValidator.*;\n\n")))}d.isMDXComponent=!0},2884:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/APIBasics-eb02d70edd58c161ff8eb3b72a02e7e1.png"},6837:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Https-4e01fe25b11022697d7d864d3fc0948a.png"}}]);