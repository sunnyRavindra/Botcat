"use strict";(self.webpackChunkdaku=self.webpackChunkdaku||[]).push([[1604],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),u=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(n),d=a,g=c["".concat(o,".").concat(d)]||c[d]||m[d]||l;return n?r.createElement(g,s(s({ref:t},p),{},{components:n})):r.createElement(g,s({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,s=new Array(l);s[0]=d;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[c]="string"==typeof e?e:a,s[1]=i;for(var u=2;u<l;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8812:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const l={title:"TestNg"},s=void 0,i={unversionedId:"1TestNg",id:"1TestNg",title:"TestNg",description:"- ### Reference Documents",source:"@site/docs/1TestNg.md",sourceDirName:".",slug:"/1TestNg",permalink:"/1TestNg",draft:!1,tags:[],version:"current",frontMatter:{title:"TestNg"},sidebar:"myAutogeneratedSidebar",previous:{title:"Selenium",permalink:"/1Selenium"},next:{title:"Grid",permalink:"/2Grid"}},o={},u=[{value:"TestNG Run",id:"testng-run",level:3},{value:"TestNG Project",id:"testng-project",level:3},{value:"Parellel Execution",id:"parellel-execution",level:3},{value:"Listeners",id:"listeners",level:3},{value:"TestNG Listeners",id:"testng-listeners",level:3},{value:"WebDriverListener",id:"webdriverlistener",level:3},{value:"ItestListener",id:"itestlistener",level:3},{value:"IReporter Interface",id:"ireporter-interface",level:3},{value:"TestNG Reports",id:"testng-reports",level:3},{value:"PDF Library",id:"pdf-library",level:3}],p={toc:u},c="wrapper";function m(e){let{components:t,...l}=e;return(0,a.kt)(c,(0,r.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("h3",{parentName:"li",id:"reference-documents"},(0,a.kt)("a",{parentName:"h3",href:"https://testng.org/doc/documentation-main.html"},"Reference Documents"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("h3",{parentName:"li",id:"testng-downloads"},(0,a.kt)("a",{parentName:"h3",href:"https://testng.org/doc/download.html"},"TestNG Downloads")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Seperate Thread for all methods"),(0,a.kt)("li",{parentName:"ul"},"Support for dataproviders"),(0,a.kt)("li",{parentName:"ul"},"Support for Parameters")),(0,a.kt)("h3",{id:"testng-run"},"TestNG Run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Bash"},"java org.testng.TestNG testng1.xml [testng2.xml testng3.xml ...]\n")),(0,a.kt)("h3",{id:"testng-project"},"TestNG Project"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"mvn archetype:create -DgroupId=org.martingilday -DartifactId=test1 -DarchetypeGroupId=org.martingilday -DarchetypeArtifactId=testng-archetype\n  -DarchetypeVersion=1.0-SNAPSHOT -DremoteRepositories=https://www.martingilday.org/repository/\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-TestNG"},'        <classes>\n            <class name="testNG.Utils" />\n            <class name="testNG.TestNG">\n                <methods>\n                    <include name="test2" />\n                </methods>\n            </class>\n        </classes>\n')),(0,a.kt)("h3",{id:"parellel-execution"},"Parellel Execution"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Parelell.png",src:n(1135).Z,width:"1862",height:"1088"})),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://www.guru99.com/images/jsp/030116_0948_TestNGExecu2.png",alt:"Parellel Execution"})),(0,a.kt)("h3",{id:"listeners"},"Listeners"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://testsigma.com/blog/listeners-in-selenium/"},"Basics"))),(0,a.kt)("h3",{id:"testng-listeners"},"TestNG Listeners"),(0,a.kt)("p",null,"Below are the few TestNG listeners:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"IAnnotationTransformer "),(0,a.kt)("li",{parentName:"ul"},"IAnnotationTransformer2 "),(0,a.kt)("li",{parentName:"ul"},"IConfigurable "),(0,a.kt)("li",{parentName:"ul"},"IConfigurationListener "),(0,a.kt)("li",{parentName:"ul"},"IExecutionListener"),(0,a.kt)("li",{parentName:"ul"},"IHookable "),(0,a.kt)("li",{parentName:"ul"},"IInvokedMethodListener "),(0,a.kt)("li",{parentName:"ul"},"IInvokedMethodListener2 "),(0,a.kt)("li",{parentName:"ul"},"IMethodInterceptor "),(0,a.kt)("li",{parentName:"ul"},"IReporter"),(0,a.kt)("li",{parentName:"ul"},"ISuiteListener"),(0,a.kt)("li",{parentName:"ul"},"ITestListener ")),(0,a.kt)("h3",{id:"webdriverlistener"},"WebDriverListener"),(0,a.kt)("iframe",{src:"https://www.selenium.dev/selenium/docs/api/java/org/openqa/selenium/support/events/EventFiringDecorator.html",width:"100%",height:"4920px",scrolling:"no"}),(0,a.kt)("h3",{id:"itestlistener"},"ItestListener"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Java"},'public class Listeners implements ITestListener {\n\n@Override\npublic void onStart(ITestContext context) {\n\nSystem.out.println("Test Started : ###########Started###########" + context.getName());\n\n}\n\n@Override\n\npublic void onFinish(ITestContext context) {\nSystem.out.println("Test Ends : ##########Ended######### :--\x3e" + context.getName());\n}\n\n@Override\n\npublic void onTestFailure(ITestResult results) {\n\nSystem.out.println("Test Results Status : " + results.getStatus());\n}\n\n@Override\n\npublic void onTestSuccess(ITestResult result) {\nSystem.out.println("Test sucessfuly completed " + result.getName() );\n    }\n\n@Override\n\npublic void onTestSkipped(ITestResult result) {\n\nSystem.out.println("Test sucessfuly completed " + result.getName() );\n    }\n}\n')),(0,a.kt)("h3",{id:"ireporter-interface"},"IReporter Interface"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Java"},'@Override\n\npublic void generateReport(List<XmlSuite> xmlSuite, List<ISuite> iSuite, String outputDirectory) {\n\nfor (ISuite isuite : iSuite) {\nMap<String, ISuiteResult> results = isuite.getResults();\nSet<String> keys = results.keySet();\n\nfor (String key : keys) {\nITestContext context = results.get(key).getTestContext();\n\nSystem.out.println("Suite Name->" + context.getName()\n+ "::Report output Ditectory->" + context.getOutputDirectory()\n+ "::Suite Name->" + context.getSuite().getName()\n+ "::Start Date Time for execution->" + context.getStartDate()\n+ "::End Date Time for execution->" + context.getEndDate());\n\nIResultMap resultMap = context.getFailedTests();\n\nCollection<ITestNGMethod> failedMethods = resultMap.getAllMethods();\n\nSystem.out.println("--------FAILED TEST CASE---------");\nfor (ITestNGMethod iTestNGMethod : failedMethods) {\n// Print failed test cases detail\nSystem.out.println("TESTCASE NAME->" + iTestNGMethod.getMethodName()\n+ "\\nDescription->" + iTestNGMethod.getDescription()\n+ "\\nPriority->" + iTestNGMethod.getPriority()\n+ "\\n:Date->" + new Date(iTestNGMethod.getDate()));\n\n            }\n        }\n    }\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Call the Listener in your class")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Java"},"@Listeners(utils.Listeners.class)\n\npublic class LoginTest {\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Instead add the tag in TestNG.xml")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Java"},'<listeners>\n<listener class-name="listeners.TestListener"></listener>\n<listener class-name="listeners.ReporterListener"></listener>\n</listeners>\n')),(0,a.kt)("h3",{id:"testng-reports"},"TestNG Reports"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Java"},'Reporter.log("Logs that you want to be visible in TestNG report")\n')),(0,a.kt)("h3",{id:"pdf-library"},"PDF Library"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"ITest Java API")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Maven"},"\x3c!-- https://mvnrepository.com/artifact/com.lowagie/itext --\x3e\n<dependency>\n    <groupId>com.lowagie</groupId>\n    <artifactId>itext</artifactId>\n    <version>2.1.7</version>\n</dependency>\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Jyperson Listener")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Maven"},"")))}m.isMDXComponent=!0},1135:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/Parelell-788b5b747720c72883e61622e19174a9.png"}}]);