"use strict";(self.webpackChunkdaku=self.webpackChunkdaku||[]).push([[4746],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},l="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,i=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),l=u(n),m=s,f=l["".concat(i,".").concat(m)]||l[m]||c[m]||r;return n?a.createElement(f,o(o({ref:t},d),{},{components:n})):a.createElement(f,o({ref:t},d))}));function f(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,o=new Array(r);o[0]=m;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[l]="string"==typeof e?e:s,o[1]=p;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7910:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>p,toc:()=>u});var a=n(7462),s=(n(7294),n(3905));const r={title:"WSDL"},o=void 0,p={unversionedId:"SoapUI/SoapAutomation",id:"SoapUI/SoapAutomation",title:"WSDL",description:"1. Creating a Test Case and Making a Request",source:"@site/docs/SoapUI/SoapAutomation.md",sourceDirName:"SoapUI",slug:"/SoapUI/SoapAutomation",permalink:"/SoapUI/SoapAutomation",draft:!1,tags:[],version:"current",frontMatter:{title:"WSDL"},sidebar:"myAutogeneratedSidebar",previous:{title:"Message Structure",permalink:"/SoapUI/Soap"},next:{title:"WSDL",permalink:"/SoapUI/WSDL"}},i={},u=[{value:"1. Creating a Test Case and Making a Request",id:"1-creating-a-test-case-and-making-a-request",level:3},{value:"2. Data-Driven Testing",id:"2-data-driven-testing",level:3},{value:"3. Adding Assertions",id:"3-adding-assertions",level:3}],d={toc:u},l="wrapper";function c(e){let{components:t,...n}=e;return(0,s.kt)(l,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h3",{id:"1-creating-a-test-case-and-making-a-request"},"1. Creating a Test Case and Making a Request"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-groovy"},'// Create a new Test Case\ndef testCase = testRunner.testCase.createTestStep("MyTestCase")\n\n// Create a new Test Request\ndef testRequest = testCase.addTestRequest("MyTestRequest")\n\n// Set the endpoint URL\ndef endpoint = "https://api.example.com"\ntestRequest.setPropertyValue("Endpoint", endpoint)\n\n// Set the request body\ndef requestBody = """\n<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.example.com">\n    <soapenv:Header/>\n    <soapenv:Body>\n        <web:MyRequest>\n            <web:Parameter1>Value1</web:Parameter1>\n            <web:Parameter2>Value2</web:Parameter2>\n        </web:MyRequest>\n    </soapenv:Body>\n</soapenv:Envelope>\n"""\ntestRequest.setRequestContent(requestBody)\n\n// Execute the request\ndef response = testRequest.run(null, true)\nlog.info("Response: " + response.getResponseContent())\n')),(0,s.kt)("h3",{id:"2-data-driven-testing"},"2. Data-Driven Testing"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-groovy"},'import com.eviware.soapui.support.GroovyUtils\n\n// Load data from an external source (e.g., CSV file)\ndef csvFile = "data.csv"\ndef data = new GroovyUtils(context).getXmlHolder(csvFile)\n\n// Loop through the data rows and execute requests for each row\nwhile (data["//row"]) {\n    def parameter1 = data.getNodeValues("Parameter1").join()\n    def parameter2 = data.getNodeValues("Parameter2").join()\n\n    // Create a new Test Case for each data row\n    def testCase = testRunner.testCase.createTestStep("Data-Driven-Test")\n\n    // Create a new Test Request\n    def testRequest = testCase.addTestRequest("Data-Driven-Request")\n\n    // Set the endpoint URL\n    def endpoint = "https://api.example.com"\n    testRequest.setPropertyValue("Endpoint", endpoint)\n\n    // Set the request body with parameters from the data source\n    def requestBody = """\n    <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.example.com">\n        <soapenv:Header/>\n        <soapenv:Body>\n            <web:MyRequest>\n                <web:Parameter1>${parameter1}</web:Parameter1>\n                <web:Parameter2>${parameter2}</web:Parameter2>\n            </web:MyRequest>\n        </soapenv:Body>\n    </soapenv:Envelope>\n    """\n    testRequest.setRequestContent(requestBody)\n\n    // Execute the request and log the response\n    def response = testRequest.run(null, true)\n    log.info("Response for Parameter1: ${parameter1}, Parameter2: ${parameter2}: " + response.getResponseContent())\n    \n    // Move to the next row in the data source\n    data = data.getNextSibling()\n}\n')),(0,s.kt)("h3",{id:"3-adding-assertions"},"3. Adding Assertions"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-groovy"},'// Create a new Test Case\ndef testCase = testRunner.testCase.createTestStep("Assertions-Test")\n\n// Create a new Test Request\ndef testRequest = testCase.addTestRequest("Assertions-Request")\n\n// Set the endpoint URL\ndef endpoint = "https://api.example.com"\ntestRequest.setPropertyValue("Endpoint", endpoint)\n\n// Set the request body\ndef requestBody = """\n<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.example.com">\n    <soapenv:Header/>\n    <soapenv:Body>\n        <web:MyRequest>\n            <web:Parameter1>Value1</web:Parameter1>\n            <web:Parameter2>Value2</web:Parameter2>\n        </web:MyRequest>\n    </soapenv:Body>\n</soapenv:Envelope>\n"""\ntestRequest.setRequestContent(requestBody)\n\n// Execute the request\ndef response = testRequest.run(null, true)\ndef responseContent = response.getResponseContent()\n\n// Add an assertion to check if a specific element exists in the response\ndef assertion = testRequest.addAssertion("Response Contains")\nassertion.setConfiguration("<XPath Match=\'//web:SomeElement\'/>")\nassertion.setMessageContent(responseContent)\n\n// Execute the assertion\nassertion.assertResponse()\n')),(0,s.kt)("p",null,"These code examples provide a practical demonstration of creating test cases, making requests, performing data-driven testing, and adding assertions in SoapUI using Groovy scripting. You can adapt and expand these examples to suit your specific testing needs."))}c.isMDXComponent=!0}}]);