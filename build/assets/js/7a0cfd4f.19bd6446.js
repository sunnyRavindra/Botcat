"use strict";(self.webpackChunkdaku=self.webpackChunkdaku||[]).push([[9262],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),s=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(r),d=n,g=c["".concat(p,".").concat(d)]||c[d]||m[d]||i;return r?a.createElement(g,o(o({ref:t},u),{},{components:r})):a.createElement(g,o({ref:t},u))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:n,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6711:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const i={title:"DSA"},o=void 0,l={unversionedId:"DSA",id:"DSA",title:"DSA",description:"1. GFG DSA Complete guide",source:"@site/docs/DSA.md",sourceDirName:".",slug:"/DSA",permalink:"/DSA",draft:!1,tags:[],version:"current",frontMatter:{title:"DSA"},sidebar:"myAutogeneratedSidebar",previous:{title:"Jira",permalink:"/3Jira"},next:{title:"Robot Framework",permalink:"/RobotFramework"}},p={},s=[{value:"1. GFG DSA Complete guide",id:"1-gfg-dsa-complete-guide",level:3},{value:"2. GFG DSA for Beginners",id:"2-gfg-dsa-for-beginners",level:3},{value:"3. GFG DSA Practice Problems",id:"3-gfg-dsa-practice-problems",level:3},{value:"Auxiliary",id:"auxiliary",level:3},{value:"Asymptotic analysis",id:"asymptotic-analysis",level:3},{value:"Big O Notation (O):",id:"big-o-notation-o",level:3},{value:"Omega Notation (\u03a9):",id:"omega-notation-\u03c9",level:3},{value:"Theta Notation (\u0398):",id:"theta-notation-\u03b8",level:3},{value:"Array",id:"array",level:3},{value:"ReverseArray",id:"reversearray",level:3}],u={toc:s},c="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"1-gfg-dsa-complete-guide"},(0,n.kt)("a",{parentName:"h3",href:"https://www.geeksforgeeks.org/learn-data-structures-and-algorithms-dsa-tutorial/"},"1. GFG DSA Complete guide")),(0,n.kt)("h3",{id:"2-gfg-dsa-for-beginners"},(0,n.kt)("a",{parentName:"h3",href:"https://www.geeksforgeeks.org/complete-guide-to-dsa-for-beginners/"},"2. GFG DSA for Beginners")),(0,n.kt)("h3",{id:"3-gfg-dsa-practice-problems"},(0,n.kt)("a",{parentName:"h3",href:"https://www.geeksforgeeks.org/explore?page=1&sortBy=submissions&utm_source=geeksforgeeks&utm_medium=articles%20dsa_lp%20header_link_click&utm_campaign=practice%20tracker"},"3. GFG DSA Practice Problems")),(0,n.kt)("p",null,"![","[Pasted image 20231126084337.png]","]"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Linear Data Structures:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Elements arranged sequentially."),(0,n.kt)("li",{parentName:"ul"},"Examples: Array, stack, queue, linked list."))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Static Data Structures:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Fixed memory size."),(0,n.kt)("li",{parentName:"ul"},"Example: Array."))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Dynamic Data Structures:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Size not fixed, can be updated during runtime."),(0,n.kt)("li",{parentName:"ul"},"Examples: Queue, stack."))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Non-linear Data Structures:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Elements not placed sequentially."),(0,n.kt)("li",{parentName:"ul"},"Examples: Trees, graphs.")))),(0,n.kt)("h3",{id:"auxiliary"},"Auxiliary"),(0,n.kt)("p",null,"refers to the extra space used in the program other than the input data structure."),(0,n.kt)("h3",{id:"asymptotic-analysis"},"Asymptotic analysis"),(0,n.kt)("p",null,"Method for describing the efficiency of an algorithm."),(0,n.kt)("h3",{id:"big-o-notation-o"},"Big O Notation (O):"),(0,n.kt)("p",null,"It describes the worst-case scenario for the algorithm's time or space complexity in terms of a mathematical function. For example, O(n) represents linear complexity, O(n^2) represents quadratic complexity, and O(log n) represents logarithmic complexity."),(0,n.kt)("h3",{id:"omega-notation-\u03c9"},"Omega Notation (\u03a9):"),(0,n.kt)("p",null,"It describes the best-case scenario for the algorithm's time or space complexity. For example, \u03a9(n) represents linear complexity."),(0,n.kt)("h3",{id:"theta-notation-\u03b8"},"Theta Notation (\u0398):"),(0,n.kt)("p",null,"Theta notation provides a tight bound on an algorithm's growth rate, both upper and lower bounds. If an algorithm has a time complexity of \u0398(f(n)), it means the algorithm's performance grows exactly at the rate of the function f(n)."),(0,n.kt)("p",null,"![","[Pasted image 20231125112526.png]","]"),(0,n.kt)("h3",{id:"array"},"Array"),(0,n.kt)("h3",{id:"reversearray"},"ReverseArray"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"    public static void reverseArray2(int[] inputArray) {\n        int Start = 0;\n        int end = inputArray.length - 1;\n\n        while (Start < end) {\n            int temp = inputArray[Start];\n            inputArray[Start] = inputArray[end];\n            inputArray[end] = temp;\n            Start++;\n        }\n        end--;\n    }\n")))}m.isMDXComponent=!0}}]);